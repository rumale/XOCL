/**
 * This is a autogenerated using the com.x.ocl:xocl-maven-plugin:1.2.4 maven plugin.
 * The contents are generated from the following XOCL files:
 *            ebay.contracts.xocl
 *            marketplace.transactions.xocl
 *            ebay.transactions.xocl
 *            marketplace.contracts.xocl
 *            marketplace.messages.xocl
 *            ebay.messages.xocl
 *            ebay.processes.xocl
 *            marketplace.processes.xocl
 * DO NOT EDIT THIS FILE DIRECTLY
 */
@namespace("com.x.marketplace.v3")
protocol com_x_marketplace_v3 {
	import idl "com.x.core.v1.avdl";
	import idl "com.x.ordermanagement.v1.avdl";
	import idl "com.x.authz.v1.avdl";

	@topics("/com.x.marketplace.v3/PolicyGroupDeletion/DeletePolicyGroupSucceeded")
	@version("3.0.0")
	record DeletePolicyGroupSucceeded {
		string policyGroupId = 0;
  	}

	enum ShippingRateType {
		FLAT,
		CALCULATED,
		FREIGHT
	}

	record Site {
		string siteCode = 0;
 		string siteName = 0;
  	}

	record SearchSiteSucceeded {
		union{null,string} environmentName = null;
 		array<Site> sites;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/GetAllSiteSucceeded")
	@version("3.0.0")
	record GetAllSiteSucceeded {
		array<Site> sites;
  	}

	record SupportedCountry {
		string countryCode = 0;
 		string description = 0;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupDeletion/DeletePolicyGroup")
	@version("3.0.0")
	record DeletePolicyGroup {
		string policyGroupId = 0;
  	}

	@topics("/com.x.marketplace.v3/AuthorizationRevoke/RevokeAuthorizationFailed")
	@version("3.0.0")
	record RevokeAuthorizationFailed {
		string xAccountId = 0;
 		array<com.x.core.v1.Error> errors;
  	}

	record CancelOfferError {
		string offerId = 0;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevocation/RevokePublishedOfferFailed")
	@version("3.0.0")
	record RevokePublishedOfferFailed {
		CancelOfferError cancelError;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/AuthorizedAccountSearch/GetAllAuthorizedAccountFailed")
	@version("3.0.0")
	record GetAllAuthorizedAccountFailed {
		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupDeletion/DeletePolicyGroupFailed")
	@version("3.0.0")
	record DeletePolicyGroupFailed {
		string policyGroupId = 0;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/SearchCategoryFailed")
	@version("3.0.0")
	record SearchCategoryFailed {
		union{null,string} siteCode = null;
 		union{null,string} environmentName = null;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/AuthorizationRevoke/RevokeAuthorizationSucceeded")
	@version("3.0.0")
	record RevokeAuthorizationSucceeded {
		string xAccountId = 0;
  	}

	@topics("/com.x.marketplace.v3/OfferDeactivation/OfferDeactivated")
	@version("3.0.0")
	record OfferDeactivated {
		string offerId = 0;
 		string reason = 0;
 		union{null,string} policyGroupId = null;
  	}

	record Category {
		string id = 0;
 		string name = 0;
 		union{null,string} parentId = null;
 		union{null,boolean} catalogEnabled = null;
 		union{null,int} categoryLevel = null;
 		union{null,boolean} leafCategory = null;
 		union{null,string} categoryUrl = null;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/SearchCategorySucceeded")
	@version("3.0.0")
	record SearchCategorySucceeded {
		array<Category> categories;
 		union{null,string} siteCode = null;
 		union{null,string} environmentName = null;
  	}

	@topics("/com.x.marketplace.v3/StoreLookup/LookupStore")
	@version("3.0.0")
	record LookupStore {
		union{null,string} xAccountId = null;
 		union{null,string} userMarketplaceId = null;
 		union{null,string} siteCode = null;
 		union{null,string} environmentName = null;
  	}

	@topics("/com.x.marketplace.v3/StoreLookup/LookupStoreFailed")
	@version("3.0.0")
	record LookupStoreFailed {
		LookupStore request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevocation/RevokePublishedOfferSucceeded")
	@version("3.0.0")
	record RevokePublishedOfferSucceeded {
		string offerId = 0;
 		union{null,string} policyGroupId = null;
  	}

	record SearchSiteFailed {
		union{null,string} environmentName = null;
 		array<com.x.core.v1.Error> errors;
  	}

	enum ShippingLocaleType {
		DOMESTIC,
		INTERNATIONAL
	}

	record SupportedShippingService {
		string description = 0;
 		union{null,string} carrier = null;
 		string serviceName = 0;
 		int shippingTimeMaxInDays = 0;
 		int shippingTimeMinInDays = 0;
 		union{null,ShippingRateType} rateType = null;
 		ShippingLocaleType localeType;
 		boolean dimensionsRequired = 0;
 		boolean weightRequired = 0;
 		boolean surchargeApplicable = 0;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupLookup.Ebay/LookupPolicyGroup /com.x.marketplace.v3/PolicyGroupLookup/LookupPolicyGroup")
	@version("3.0.0")
	record LookupPolicyGroup {
		string policyGroupId = 0;
  	}

	record ShippingServiceOption {
		int sellerPriority = 0;
 		string serviceName = 0;
 		com.x.core.v1.CurrencyAmount cost;
 		union{null,com.x.core.v1.CurrencyAmount} discountAmount = null;
 		union{null,com.x.core.v1.CurrencyAmount} additionalCost = null;
 		union{null,com.x.core.v1.CurrencyAmount} packagingHandlingCost = null;
 		union{null,com.x.core.v1.CurrencyAmount} surcharge = null;
 		union{null,array<string>} shipToLocations = null;
 		union{null,array<string>} excludeShipToLocations = null;
  	}

	record ShippingServiceOptionGroup {
		ShippingRateType rateType;
 		ShippingLocaleType localeType;
 		boolean applyPromotionalShippingRule = 0;
 		array<ShippingServiceOption> shippingServiceOptions;
  	}

	record ShippingPolicy {
		array<ShippingServiceOptionGroup> optionGroups;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/SearchCategory")
	@version("3.0.0")
	record SearchCategory {
		union{null,string} siteCode = null;
 		union{null,string} xProductTypeId = null;
 		union{null,string} environmentName = null;
  	}

	record VariationSpecific {
		string name = 0;
 		string value = 0;
  	}

	record Variation {
		com.x.core.v1.CurrencyAmount price;
 		int quantity = 0;
 		string sku = 0;
 		union{null,array<string>} imageUrls = null;
 		array<VariationSpecific> variationSpecifics;
 		union{null,com.x.core.v1.CurrencyAmount} msrp = null;
 		union{null,com.x.core.v1.CurrencyAmount} minimumAdvertisedPrice = null;
  	}

	record ListingVariations {
		array<Variation> variations;
 		union{null, string} imageVariationName;
  	}

	@topics("/com.x.marketplace.v3/AuthorizedAccountSearch/GetAllAuthorizedAccount")
	@version("3.0.0")
	record GetAllAuthorizedAccount {
 	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/GetAllSiteFailed")
	@version("3.0.0")
	record GetAllSiteFailed {
		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevocation/RevokePublishedOffer")
	@version("3.0.0")
	record RevokePublishedOffer {
		string offerId = 0;
 		union{null,string} policyGroupId = null;
  	}

	record PaymentPolicy {
		union{null,array<com.x.core.v1.PaymentMethod>} acceptedPaymentTypes = null;
 		union{null,boolean} immediatePaymentRequired = null;
 		union{null,string} paymentInstructions = null;
  	}

	record Environment {
		string name = 0;
  	}

	@topics("/com.x.marketplace.v3/OfferSearch/SearchOffer")
	@version("3.0.0")
	record SearchOffer {
		union{null,array<string>} skus = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} startTime = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} endTime = null;
  	}

	@topics("/com.x.marketplace.v3/OfferSearch/SearchOfferFailed")
	@version("3.0.0")
	record SearchOfferFailed {
		SearchOffer request;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/GetAllAvailableChannel")
	@version("3.0.0")
	record GetAllAvailableChannel {
 	}

	@topics("/com.x.marketplace.v3/AuthorizationRevoke/RevokeAuthorization")
	@version("3.0.0")
	record RevokeAuthorization {
		string xAccountId = 0;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/LookupSiteMetadata")
	@version("3.0.0")
	record LookupSiteMetadata {
		array<string> siteCode;
 		union{null,string} environmentName = null;
  	}

	record MarketplaceAccount {
		union{null,string} xId = null;
 		union{null,string} userMarketplaceId = null;
 		union{null,string} siteCode = null;
 		union{null,string} environmentName = null;
 		union{null,long} authorizationExpiration = null;
  	}

	@topics("/com.x.marketplace.v3/AuthorizedAccountSearch/GetAllAuthorizedAccountSucceeded")
	@version("3.0.0")
	record GetAllAuthorizedAccountSucceeded {
		array<MarketplaceAccount> accounts;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/GetAllSite")
	@version("3.0.0")
	record GetAllSite {
 	}

	@topics("/com.x.marketplace.v3/PolicyGroupLookup/LookupPolicyGroupFailed /com.x.marketplace.v3/PolicyGroupLookup.Ebay/LookupPolicyGroupFailed")
	@version("3.0.0")
	record LookupPolicyGroupFailed {
		string policyGroupId = 0;
 		array<com.x.core.v1.Error> errors;
  	}

	record CustomCategory {
		long id = 0;
 		string name = 0;
 		int order = 0;
 		array<CustomCategory> childCategories;
  	}

	record MarketplaceStore {
		string name = 0;
 		union{null,array<CustomCategory>} categories = null;
  	}

	@topics("/com.x.marketplace.v3/StoreLookup/LookupStoreSucceeded")
	@version("3.0.0")
	record LookupStoreSucceeded {
		MarketplaceStore store;
 		LookupStore request;
  	}

	record SupportedHandlingTime {
		int maxHandlingTime = 0;
 		string description = 0;
  	}

	enum OfferState {
		NEW,
		PUBLISHED,
		SUSPENDED
	}

	record OfferChannelData {
		OfferState offerState;
 		string channelAssignedOfferId = 0;
 		union{null,string} channelOfferUrl = null;
 		union{null,string} channelStatus = null;
  	}

	enum RefundMethod {
		MONEY_BACK,
		EXCHANGE_ONLY,
		STORE_CREDIT
	}

	record ReturnPolicy {
		union{null,string} description = null;
 		union{null,boolean} returnAccepted = null;
 		union{null,boolean} buyerPaysReturnShipping = null;
 		union{null,int} returnByDays = null;
 		union{null,RefundMethod} refundMethod = null;
  	}

	record EbayPolicyGroup {
		string name = 0;
 		union{null,string} siteCode = null;
 		union{null,PaymentPolicy} payment = null;
 		union{null,ShippingPolicy} shipping = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		string xAccountId = 0;
 		string id = 0;
 		string policyGroupId = 0;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupUpdate.Ebay/UpdateEbayPolicyGroupFailed")
	@version("3.0.0")
	record UpdateEbayPolicyGroupFailed {
		EbayPolicyGroup p;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupUpdate.Ebay/UpdateEbayPolicyGroupSucceeded")
	@version("3.0.0")
	record UpdateEbayPolicyGroupSucceeded {
		EbayPolicyGroup p;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupUpdate.Ebay/UpdateEbayPolicyGroup")
	@version("3.0.0")
	record UpdateEbayPolicyGroup {
		EbayPolicyGroup p;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupCreation.Ebay/CreateEbayPolicyGroupSucceeded")
	@version("3.0.0")
	record CreateEbayPolicyGroupSucceeded {
		EbayPolicyGroup p;
  	}

	record EbayPolicyGroupData {
		string name = 0;
 		union{null,string} siteCode = null;
 		union{null,PaymentPolicy} payment = null;
 		union{null,ShippingPolicy} shipping = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		string xAccountId = 0;
 		union{null,string} location = null;
 		union{null,string} postalCode = null;
 		string countryCode = 0;
 		union{null,string} payPalEmailAddress = null;
 		union{null,int} handlingTime = null;
 		union{null,boolean} useTaxTable = null;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupCreation.Ebay/CreateEbayPolicyGroupFailed")
	@version("3.0.0")
	record CreateEbayPolicyGroupFailed {
		EbayPolicyGroupData p;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupCreation.Ebay/CreateEbayPolicyGroup")
	@version("3.0.0")
	record CreateEbayPolicyGroup {
		EbayPolicyGroupData p;
  	}

	record EbayOfferDetails {
		string id = 0;
 		string channelId = 0;
 		string sku = 0;
 		com.x.core.v1.CurrencyAmount price;
 		int quantity = 0;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} startTime = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} endTime = null;
 		union{null,string} title = null;
 		union{null,string} subTitle = null;
 		union{null,boolean} giftWrapAvailable = null;
 		union{null,array<string>} marketCategories = null;
 		union{null,array<string>} customCategories = null;
 		union{null,PaymentPolicy} payment = null;
 		union{null,ShippingPolicy} shipping = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		string listingFormat = 0;
 		string duration = 0;
 		string countryCode = 0;
 		union{null,com.x.core.v1.CurrencyAmount} buyItNowPrice = null;
 		union{null,com.x.core.v1.CurrencyAmount} reservePrice = null;
 		union{null,string} payPalEmailAddress = null;
 		union{null,int} handlingTime = null;
 		union{null,boolean} useTaxTable = null;
 		union{null,string} postalCode = null;
 		union{null,string} location = null;
 		union{null,ListingVariations} listingVariations = null;
  	}

	record RevisePublishedEbayOffer {
		EbayOfferDetails update;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/OfferPublication.Ebay/PublishEbayOffer")
	@version("3.0.0")
	record PublishEbayOffer {
		EbayOfferDetails offer;
 		union{null,string} policyGroupId = null;
  	}

	record EbayOffer {
		OfferChannelData channelData;
 		EbayOfferDetails offerDetails;
  	}

	record ReviseEbayPublishedOfferSucceeded {
		EbayOffer updatedOffer;
 		union{null,string} policyGroupId = null;
  	}

	record PublishEbayOfferSucceeded {
		EbayOffer offer;
 		union{null,string} policyGroupId = null;
  	}

	record OfferDetails {
		string id = 0;
 		string channelId = 0;
 		string sku = 0;
 		com.x.core.v1.CurrencyAmount price;
 		int quantity = 0;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} startTime = null;
 		//A string representing the date and time as defined by RFC 3339's 'date-time' format with 'time-secfrac' defined.
		union{null,string} endTime = null;
 		union{null,string} title = null;
 		union{null,string} subTitle = null;
 		union{null,boolean} giftWrapAvailable = null;
 		union{null,array<string>} marketCategories = null;
 		union{null,array<string>} customCategories = null;
 		union{null,PaymentPolicy} payment = null;
 		union{null,ShippingPolicy} shipping = null;
 		union{null,ReturnPolicy} returnPolicy = null;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevision/RevisePublishedOffer")
	@version("3.0.0")
	record RevisePublishedOffer {
		OfferDetails update;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/OfferPublication/PublishOffer")
	@version("3.0.0")
	record PublishOffer {
		OfferDetails offer;
 		union{null,string} policyGroupId = null;
  	}

	record Offer {
		OfferChannelData channelData;
 		OfferDetails offerDetails;
  	}

	@topics("/com.x.marketplace.v3/OfferSearch/SearchOfferSucceeded")
	@version("3.0.0")
	record SearchOfferSucceeded {
		array<Offer> offers;
 		SearchOffer request;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevision/RevisePublishedOfferSucceeded")
	@version("3.0.0")
	record RevisePublishedOfferSucceeded {
		Offer updatedOffer;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/OfferPublication/PublishOfferSucceeded /com.x.marketplace.v3/OfferPublication.Ebay/PublishOfferSucceeded")
	@version("3.0.0")
	record PublishOfferSucceeded {
		Offer offer;
 		union{null,string} policyGroupId = null;
  	}

	record OfferUpdateError {
		Offer offer;
 		array<com.x.core.v1.Error> errors;
  	}

	record ReviseEbayPublishedOfferFailed {
		OfferUpdateError errors;
 		union{null,string} policyGroupId = null;
  	}

	record ReviseMarketplacePublishedOfferFailed {
		OfferUpdateError errors;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/PublishedOfferRevision/RevisePublishedOfferFailed")
	@version("3.0.0")
	record RevisePublishedOfferFailed {
		OfferUpdateError errors;
 		union{null,string} policyGroupId = null;
  	}

	record OfferPublicationError {
		union{null,Offer} offer = null;
 		array<com.x.core.v1.Error> errors;
  	}

	record PublishEbayOfferFailed {
		OfferPublicationError offerError;
 		union{null,string} policyGroupId = null;
  	}

	@topics("/com.x.marketplace.v3/OfferPublication/PublishOfferFailed /com.x.marketplace.v3/OfferPublication.Ebay/PublishOfferFailed")
	@version("3.0.0")
	record PublishOfferFailed {
		OfferPublicationError offerError;
 		union{null,string} policyGroupId = null;
  	}

	record PolicyGroupData {
		string name = 0;
 		union{null,string} siteCode = null;
 		union{null,PaymentPolicy} payment = null;
 		union{null,ShippingPolicy} shipping = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		string xAccountId = 0;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupCreation/CreatePolicyGroupFailed")
	@version("3.0.0")
	record CreatePolicyGroupFailed {
		PolicyGroupData p;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupCreation/CreatePolicyGroup")
	@version("3.0.0")
	record CreatePolicyGroup {
		PolicyGroupData p;
  	}

	record PolicyGroup {
		string name = 0;
 		union{null,string} siteCode = null;
 		union{null,PaymentPolicy} payment = null;
 		union{null,ShippingPolicy} shipping = null;
 		union{null,ReturnPolicy} returnPolicy = null;
 		string xAccountId = 0;
 		string id = 0;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupLookup.Ebay/LookupEbayPolicyGroupSucceeded")
	@version("3.0.0")
	record LookupEbayPolicyGroupSucceeded {
		PolicyGroup p;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupUpdate/UpdatePolicyGroupFailed")
	@version("3.0.0")
	record UpdatePolicyGroupFailed {
		PolicyGroup p;
 		array<com.x.core.v1.Error> errors;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupUpdate/UpdatePolicyGroupSucceeded")
	@version("3.0.0")
	record UpdatePolicyGroupSucceeded {
		PolicyGroup p;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupUpdate/UpdatePolicyGroup")
	@version("3.0.0")
	record UpdatePolicyGroup {
		PolicyGroup p;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupCreation/CreatePolicyGroupSucceeded")
	@version("3.0.0")
	record CreatePolicyGroupSucceeded {
		PolicyGroup p;
  	}

	@topics("/com.x.marketplace.v3/PolicyGroupLookup/LookupPolicyGroupSucceeded")
	@version("3.0.0")
	record LookupPolicyGroupSucceeded {
		PolicyGroup p;
  	}

	record SupportedReturnPolicy {
		boolean returnsAccepted = 0;
 		array<RefundMethod> method;
 		int maxReturnByDays = 0;
  	}

	record SiteMetadata {
		string siteCode = 0;
 		string siteName = 0;
 		union{null,array<SupportedHandlingTime>} handlingTimes = null;
 		union{null,SupportedReturnPolicy} policy = null;
 		union{null,array<SupportedShippingService>} services = null;
 		array<string> currencies;
 		array<SupportedCountry> countries;
 		array<Environment> environments;
 		string marketplace = 0;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/LookupSiteMetadataSucceeded")
	@version("3.0.0")
	record LookupSiteMetadataSucceeded {
		array<SiteMetadata> siteMetadata;
 		union{null,string} environmentName = null;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/GetAllAvailableChannelSucceeded")
	@version("3.0.0")
	record GetAllAvailableChannelSucceeded {
		string channelName = 0;
 		string channelProviderName = 0;
  	}

	@topics("/com.x.marketplace.v3/MarketplaceSetup/LookupSiteMetadataFailed")
	@version("3.0.0")
	record LookupSiteMetadataFailed {
		array<string> siteCode;
 		union{null,string} environmentName = null;
  	}


}